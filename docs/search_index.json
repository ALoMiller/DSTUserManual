[["index.html", "Northwest Atlantic Protected Species Decision Support Tool User Manual 1 Preparing the DST Model Run 1.1 Example Base Run Script 1.2 InputActions Structures 1.3 Optional InputList Inputs", " Northwest Atlantic Protected Species Decision Support Tool User Manual version 4.2.00 2023-12-07 1 Preparing the DST Model Run 1.1 Example Base Run Script To begin, we source the model code and set directories and specifications for model inputs and InputActions (either defined in a .csv file or within the R code [explained in section 1.2]). For this example we have named our scenario MySubfolderName. rm(list=ls()) ## Clear out global environment HD=&quot;//net/work4/LobsterGroup/Management/RightWhales/DecisionSupportTool&quot;; setwd(HD) ## set directory to where inputs will be read from Version=&quot;DST_V4.2.00.R&quot; ## Specify which DST version to load/run source(paste0(HD, &quot;/function_&quot;, Version)) ## Load DST version/functions into R environment ## REQUIRED InputList INPUTS InputList = list( HomeDir=HD, ## home directory for subdirectories ModelVersion=Version, ## model version InputActions=list(Name = &quot;MySubfolderName/ExampleCSV.csv&quot;, Source=Wide), ## see Section 1.2 Below MapRefDomain=&quot;MapRef_3.9.2.Rdata&quot;, ## MapRef GearMapName = &quot;FisheryInputs_AllEastCoast_v4.0.1.Rdata&quot;, ## Fishery Input Layer ThreatModel=&quot;ThreatMod_RW_Selectivity_Uncertainty.Rdata&quot;, ## Gear Threat Model WhaleHabitatModel=&quot;Duke_RightWhaleModel_v12_1019.Rdata&quot;, ## Whale Habitat Model WhaleVertDistInput=list(File=&quot;RightWhaleVerticalDistribution_CSA_V1.1.Rdata&quot;, Distribution=&quot;Ensemble&quot;), ## Whale Vertical Distribution WhaleDimensions=&quot;WhaleDimensions_AdHoc.Rdata&quot;, ## Whale Body Dimensions CommentText = Example Comment Text ## Written to output tables ) ## close InputList DecisionTool(DecisionToolInputs = InputList) ## Call DST Function 1.2 InputActions Structures 1.2.1 Saved .csv File When defining InputActions in the .csv file structure, an Excel spreadsheet (Ex. ScenarioTemplate_V4.0.0.xlsx) is used as a starting template for management. For each line, an action is specified and can be defined by fishery, spatial, and temporal bounds. Each additional column that subsets the action can be viewed as an or statement while each additional line (new action) can be viewed as an and statement. An example InputActions spreadsheet in .csv file structure with two management actions. The first action restricts the model run to only Southern New England (SNE) and implements a soak limit on gillnet fisheries in Massachusetts (MA) waters for 1 day. This Excel spreadsheet should be saved with a new name for the scenario run with the .csv file extension in the InputSpreadsheets directory (Ex. DecisionSupportTool/InputSpreadsheets/MySubfolderName/ExampleCSV.csv). Source tells the DST what format the input is in so it can read in the scenario inputs properly. InputActions = list(Name = MySubfolderName/ExampleCSV.csv, Source = Wide) 1.2.2 Create List of Actions Write individual actions as lists, then merge together as list of lists to write into InputActions. Example code for generating input list structure within R script: A1 &lt;- list(Action = &quot;ModelConstraint&quot;, Region = &quot;GOM_GBK,SNE&quot;) A2 &lt;- list(Action = &quot;Closure&quot;, Fishery = &quot;Lobster&quot;, Months = &quot;1,2&quot;, Shapefile = &quot;South_Island_Restricted_Area_DST&quot;) A3 &lt;- list(Action = &quot;Closure&quot;, Fishery = &quot;Gillnet&quot;, StatArea = &quot;514&quot;) A4 &lt;- list(Action = &quot;GearReduction&quot;, StateFed = &quot;State&quot;) My.Input.List &lt;- list(A1,A2,A3,A4) Since the DST will not be reading in an existing CSV, choose a Run Name youd like to be written into your subfolder. Source is now the name of the list of lists youve just created. InputActions = list(Name = MySubfolderName/MyRunName, Source = My.Input.List) Be sure not to put .csv file at end of MyRunName. This will lead the model to look for a CSV file within the InputSpreadsheets/MySubfolderName rather than read your list. 1.2.3 Rerun or Modify Previous Scenario At the beginning of each DST run, the Scenario Inputs and InputActions are written into an .RData file within the subfolder specified under InputActions = list(). To rerun or modify a model, this .RData file can be read back in. The following code will read in an object to your R Environment named DecisionToolInputs load(paste0(HD,/Scenarios/MySubfolderName/MyRunName/MyRunName_DecisionToolInputs.Rdata)) To rerun the model as-is, a new InputList is not required, and the DST function can be called with the following line DecisionTool(DecisionToolInputs) You can also modify the structure of this model and rerun. For example, say that MyRunName was initially run with HighResolution = FALSE, but now a high resolution model is requested. To do this DecisionToolInputs$HighResolution &lt;- TRUE DecisionTool(DecisionToolInputs) 1.3 Optional InputList Inputs 1.3.1 Available Fisheries 1.3.2 Available Scenario Actions "],["inside-the-dst-initial-load-and-configure.html", "2 Inside the DST: Initial Load and Configure 2.1 Read Input List 2.2 Load Data", " 2 Inside the DST: Initial Load and Configure 2.1 Read Input List 2.2 Load Data "],["inside-the-dst-model-stages.html", "3 Inside the DST: Model Stages 3.1 Stage 1: Gear Reductions", " 3 Inside the DST: Model Stages 3.1 Stage 1: Gear Reductions "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
