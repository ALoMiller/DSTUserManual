[["index.html", "Northwest Atlantic Protected Species Decision Support Tool User Manual 1 Preparing the DST Model Run 1.1 Example Base Run Code 1.2 InputActions 1.3 Optional InputList Inputs 1.4 Available Fishery Inputs", " Northwest Atlantic Protected Species Decision Support Tool User Manual version 4.2.00 2023-12-20 1 Preparing the DST Model Run 1.1 Example Base Run Code To understand the setup of a DST model run, its important to look at the basic code used to source the model code (including the version), set directories, and required model inputs. Model inputs are defined as a list object InputList with the required objects listed below. Finally, the model function DecisionTool is run. rm(list=ls()) ## clear the global environment HD=&quot;//net/work4/LobsterGroup/Management/RightWhales/DecisionSupportTool&quot;; setwd(HD) ## set directory to where inputs will be read from Version=&quot;DST_V4.2.00.R&quot; ## specify which DST version to load/run source(paste0(HD, &quot;/function_&quot;, Version)) ## load DST version/functions into R environment ## REQUIRED InputList INPUTS InputList = list( HomeDir=HD, ## home directory for subdirectories ModelVersion=Version, ## model version InputActions=list(Name = &quot;ScenarioName/Example.csv&quot;, Source=Wide), ## see Section 1.2 Below MapRefDomain=&quot;MapRef_3.9.2.Rdata&quot;, ## MapRef version GearMapName = &quot;FisheryInputs_AllEastCoast_v4.0.1.Rdata&quot;, ## fishery input layer ThreatModel=&quot;ThreatMod_RW_Selectivity_Uncertainty.Rdata&quot;, ## gear threat model WhaleHabitatModel=&quot;Duke_RightWhaleModel_v12_1019.Rdata&quot;, ## whale habitat model WhaleVertDistInput=list(File=&quot;RightWhaleVerticalDistribution_CSA_V1.1.Rdata&quot;, Distribution=&quot;Ensemble&quot;), ## whale vertical distribution WhaleDimensions=&quot;WhaleDimensions_AdHoc.Rdata&quot;, ## whale body dimensions CommentText = Example Comment Text ## comment text written to output tables ) DecisionTool(DecisionToolInputs = InputList) ## call DST function 1.2 InputActions Within InputList, InputActions defines the scenario or management actions to be tested. The user has the option to define these in either a saved spreadsheet .csv file (Saved .csv File) or within the R code (Create List of Actions). For this example we have named our scenario ScenarioName. 1.2.1 Saved .csv File When defining InputActions in the .csv file structure, an Excel spreadsheet (Ex. ScenarioTemplate_V4.0.0.xlsx) is used as a starting template for management. For each line, an action is specified and can be defined by fishery, spatial, and temporal bounds. Each additional column that subsets the action can be viewed as an or statement while each additional line (new action) can be viewed as an and statement. Commas can be used when specifying multiple entries for an individual cell. In this example InputActions spreadsheet there are four management actions. The first action restricts the model run to Gulf of Maine and Georges Bank (GOM_GBK) and Southern New England (SNE). The second action implements a closure to the lobster fishery in the South Island Restricted Area for January and February. The third action implements a year round closure to the gillnet fishery in Statistical Reporting Area 514. And the fourth action applies a gear reduction to state waters. Example input spreadsheet defining managment actions to be run in the DST. This Excel spreadsheet should be saved with a new name for the scenario run with the .csv file extension in the InputSpreadsheets directory (Ex. DecisionSupportTool/InputSpreadsheets/ScenarioName/Example.csv). Source tells the DST what format the input is in so it can read in the scenario inputs properly. InputActions = list(Name = ScenarioName/Example.csv, Source = Wide) 1.2.2 Create List of Actions As an alternative to creating a saved .csv file in the InputSpreadsheets folder for model InputActions, the user can write individual actions as lists within the R code itself. These lists are then joined into a larger list of complete actions, then merge together as list of lists to write into InputActions. Following the example from the Excel spreadsheet above, we can apply these same actions as an input list in R before running the model code. In this case each action (A1, A2, A3, A4) equates to a row in the spreadsheet. A1 &lt;- list(Action = &quot;ModelConstraint&quot;, Region = &quot;GOM_GBK,SNE&quot;) A2 &lt;- list(Action = &quot;Closure&quot;, Fishery = &quot;Lobster&quot;, Months = &quot;1,2&quot;, Shapefile = &quot;South_Island_Restricted_Area&quot;) A3 &lt;- list(Action = &quot;Closure&quot;, Fishery = &quot;Gillnet&quot;, StatArea = &quot;514&quot;) A4 &lt;- list(Action = &quot;GearReduction&quot;, StateFed = &quot;State&quot;) My.Input.List &lt;- list(A1,A2,A3,A4) Since the DST will not be reading in an existing .csv file, the user will need to supply a directory name that will be associated with these input scenario actions (ScenarioName). For this method, Source is now the name of the list of lists youve just created. InputActions = list(Name = ScenarioName/Example, Source = My.Input.List) Be sure not to put .csv file at end of Example. This will lead the model to look for a .csv file within the InputSpreadsheets/ScenarioName rather than read your list. 1.2.3 Available Scenario InputActions Available management actions can be found in the dropdown menu of the Action column if using the input spreadsheet method. These are listed below with details on the required dependencies (fields within the input spreadsheet) associated with implementing them. In addition to the required dependencies, optional additions exist for all actions, including Percentage which allows a percent of the total action applied. Action RequiredDependency Notes NoAction NA Runs a baseline model with no scenario actions ModelConstraint At least one spatial, temporal, or fishery specific distinction Constrains fishery input and map layer to the specified fishery, space and/or time constraints. If a single ModelConstraint action has multiple constraints, an and statement describes their implementation (e.g.[Action = ModelConstraint, StatArea = 514, Fishery = Lobster] results in the model being constrained to only records for the Lobster Fishery in StatArea 514.) If multiple ModelConstraint actions are used, an or statement describes their implementation. (e.g.[Action = ModelConstraint, State = MA] &amp; [Action = ModelConstraint, StatArea = 514] then the model will be constrained to records within MA state waters AND Statistical Area 514.) GearReduction NA Removes all gear from specified fishery, location, and time duration. If no constraints are applied, all gear is removed. If a Percentage is not assigned, defaults to remove 100% of gear. GearCap GearCap Reduces number of gear fished for each applicable vessel (determined by Optional Dependencies) fishing above the specified GearCap. SoakLimit SoakLimit Reduces Soak time for each applicable vessel (determined by Optional Dependencies) fishing above the specified SoakLimit. LineCap LineCap Reduces the number of lines for each applicable vessel (determined by Optional Dependencies) fishing above the specified LineCap. Closure NA Redistributes or removes applicable gear (determined by Optional Dependencies). If available, gear is redistributed to applicable neighboring cells, determined by the ZoneAdjacency input. If no fishery, space, or time is specified, all gear is removed. StringLength StringRegulation, StringLength Modifies applicable strings (determined by Optional Dependencies) according to the StringRegulation and StringLength. MaxGearWSingleLine MaxGearWSnglLn Reduces strings using two lines per string within the applicable fishery, area and time (determined by Optional Dependencies) to one line per string. Strings currently fishing with a single endline are unaffected. MaxVertRopeStrength MaxRopeStrength Reduces strength of applicable vertical lines (determined by Optional Dependencies) to MaxRopeStrength. MaxHorizRopeStrength MaxRopeStrength Reduces strength of applicable horizontal lines (determined by Optional Dependencies) to MaxRopeStrength. Constraints to these management actions can be spatial, temporal, or fishery specific. These are defined by the various columns in the input spreadsheet. All available options within each column are listed in the table below. Table 1.1: Constraints for Actions within the DST and the available options Constraint Type Name Options Notes Area Region GOM_GBK, SNE, MAB, SE Regional boundaries are used for easy spatial constraint, but they do not represent management boundaries. LMA A1, A2, A3, A2_3overlap, A4, A5, A6, OCC LMA boundaries reference Lobster Management Areas throughout the US Atlantic. State ME, NH, MA, RI, CT, NY, NJ, DE, MD, VA, NC, SC, GA, FL State constraints include the individual state waters and all adjacent federal waters StateFed State, Fed Boundaries for State (0-3 nm) and Federal (&gt;3 nm) waters. Exempt Exempt, NonExempt Boundaries for areas exempt from federal regulation. NonExempt selects all waters that are subject to federal regulation (including applicable state waters. StatArea All Statistical Reporting Areas within the US Atlantic EEZ from Maine to Florida StatArea boundaries are used for fishery reporting and management. Depth Positive value between 0 and 200 Depth is informed by bathymetry survey of the US Atlantic. Values of depth should be specified in meters. Distance Positive value between 0 and 100 Distance from shore. Value should be specified in miles. Shapefile Applicable shapefile name saved in one of three directories: InputShapefiles/ TempShapefiles/ ArchiveShapefiles/ Shapefile should be able to be read in using the R sp library function st_transform. Shapefile must overlap with DST MapRef. Time Month 1-12 Months must be written in as a whole number with no significant figures. To select multiple months, separate individual numbers by a comma (e.g.1,2). Discontiguous months can also be selected. Fishery Fishery Any subset of a fishery name or names (see Available Fishery Inputs) All fisheries containing this character string will be selected and subject to the associated Action. 1.2.4 MapRef These spatial references for management actions, fishery inputs, and the DST model domain itself all utilize a gridded map containing all of these specifics referred to as MapRef. All Area constraints listed in the table below (except Shapefile) are specified for each grid cell within MapRef for each fishery and month. This allows for management actions like closures and specific gear restrictions to be implemented both within the fishery input development and within the DST model. Spatial domain of the DST. Statistical Reporting Areas and Lobster Management Areas shown for reference in green and orange, respectively. A map of the islands south of Massachusetts was inset as an example of the gridded cell size of 1 nm\\(^{2}\\). 1.2.5 Rerun or Modify Previous Scenario At the beginning of each DST model run, the model inputs and scenario InputActions are written into an .RData file within the ScenarioName with an extension _DecisionToolInputs. To rerun or modify a model, this .RData file can be read back into the R environment. load(paste0(HD,&quot;/Scenarios/ScenarioName/Example/Example_DecisionToolInputs.Rdata&quot;)) To rerun the model as-is, a new InputList is not required and the DST function can be called as follows: DecisionTool(DecisionToolInputs) The user can also modify the inputs of this model and rerun by redefining elements within the. For example, to modify rerun the above example changing the fishery input layer that is used within the model from GearMapName = \"FisheryInputs_AllEastCoast_v4.0.1.Rdata\" to GearMapName = \"FisheryInputs_Gillnet_v3.5.5.Rdata\" the user would apply the following code: DecisionToolInputs$GearMapName &lt;- &quot;FisheryInputs_Gillnet_v3.5.5.Rdata&quot; DecisionTool(DecisionToolInputs) 1.3 Optional InputList Inputs The example base run code provided in [Input Actions] lists the mandatory inputs required in the InputList. Additional optional inputs are available to the user as detailed in the table below. Variable Name Input Format Default Input Notes ZoneAdjacencyFile Example.csv ZoneAdjacency_DSTv3.9.1.csv File describing where gear can be displaced to during closure scenarios TestScenario TRUE or FALSE TRUE Run Scenario Inputs; If FALSE, only default/baseline inputs produced and scenario is NOT evaluated CoOccurrence TRUE or FALSE FALSE Run ONLY Co-Occurrence Mode; Risk/Threat will not be estimated or produced IncludeGroundGear TRUE or FALSE FALSE Option to estimate Co-Occurrence and Risk associated with GroundGear (groundline and gillnets); If FALSE, only threat of vertical endlines is assessed HighResolution TRUE or FALSE FALSE If TRUE, scenario is run at 1 nm\\(^{2}\\) resolution; If FALSE, run is conducted at 10 nm\\(^{2}\\) resolution RelocationCostExp Positive Numeric Value 1 Cost of relocating gear during a closure scenario; Exponent applied to the distance relocated; Higher values cause more fencing; lower values spread gear more evenly outside of closures ExpressRedistribution TRUE or FALSE FALSE NA RopeStrengthResolution Positive Numeric Value 500 Resolution that input rope strengths are rounded to; Lower values will lead to higher rope strength resolution, but will extend run time MinGearDensity Positive Numeric Value 0.00001 Threshold minimum gear density within a cell; Fishery input observations with less than this threshold will be removed from further modelling. AutoConstrain TRUE or FALSE FALSE Option for DST to to automatically constrain spatial domain of scenario run to which area or fishery is specified in scenario actions ThreatBounds TRUE or FALSE FALSE Option to produce upper and lower 95% confidence intervals from Threat Model on estimated Risk estimates CalculateAffectedLineDepth TRUE or FALSE FALSE NA SpLayout NA NA NA PrintTables TRUE or FALSE TRUE Option to print pdf of output tables in scenario folder PrintDefaultMaps TRUE or FALSE TRUE Option to print pdf of output default maps and map sources (.RData files) in scenario folder PrintScenarioMaps TRUE or FALSE TRUE Option to print pdf of output scenario maps and map sources (.RData files) in scenario folder PrintRedistributionMaps TRUE or FALSE FALSE Option to print output redistribution maps of gear redistributed from closures in scenario folder TruncateMaps Numeric Value between 0 and 1 1 Upper quantile to truncate output maps at; Default value of 1 prints all output WriteOutputCSV TRUE or FALSE TRUE Write default and scenario results output to csv in scenario folder WriteMapSources TRUE or FALSE FALSE Option to print map sources (Rdata outputs) without printing pdf of output maps in scenario folder ProvideSplitOutput TRUE or FALSE FALSE Option for DST to report Co-Occurrence and Risk from vertical lines and GroundGear separately WriteDetailedOutput TRUE or FALSE FALSE Option to write DST outputs from Stage 1 - 9 of the model as Rdata sources in scenario folder PrintSummary TRUE or FALSE FALSE Option to write out model summary to R Console at end of DST run ArchiveInputSpreadsheet TRUE or FALSE FALSE Save a copy of the input .csv in the scenario folder AggregateStrings TRUE or FALSE FALSE Option to aggregate String distributions within vessel classes to decrease run time ManageMemory TRUE or FALSE FALSE Option to remove stage by stage output as the model progresses to reduce memory usage of scenario run NewPlots TRUE or FALSE TRUE Option to produce original mapping structure (FALSE) or updated mapping structure (TRUE) PlotLMAs TRUE or FALSE FALSE NOT YET FUNCTIONAL; Option to print outlines of Lobster Management Areas to output maps PlotStatAreas TRUE or FALSE FALSE NOT YET FUNCTIONAL; Option to print outlines of Statistical Reporting Areas to output maps SelectBaselineYears Numeric value between 2012 and 2020 NA NOT YET FUNCTIONAL; Option to subset fishery layer to a single year 1.4 Available Fishery Inputs Fishery inputs are constructed from individual fisheries defined generally by gear type, region, and species within state or federal waters. These are combined into one coastwide fishery input (FisheryInputs_AllEastCoast_v4.0.1.Rdata) that accounts for all fixed-gear fisheries from Maine to Florida. The user can define the fishery input to be run in the DST with the Gearmap object in the InputList (Example Base Run Code). Individually built subgroups that made up this coastwide fishery input can also be specified if the user isnt interested in running the DST on all coastwide fixed-gear fisheries. Understanding these subgroups is also useful for applying management actions since any text used in the filename can be supplied in the Fishery column as a text string to subset the action, applying it only to those fisheries. List of unique fishery inputs that make up FisheryInputs_AllEastCoast_v4.0.1.Rdata. "],["inside-the-dst-initial-load-and-configure.html", "2 Inside the DST: Initial Load and Configure 2.1 Read Input List 2.2 Load Data", " 2 Inside the DST: Initial Load and Configure To begin a scenario run of implemented management actions in the DST, begin by generating the InputList with either the Excel input spreadsheet (Saved .csv File) or within the R code (Create List of Actions) and configuring the user options. 2.1 Read Input List The DST identifies all model run variables that have been specified and assigns default values for those that have not been specified. A subfolder is generated (if it doesnt already exist from a previous duplicated run). In our example from the above section, InputActions, the subfolder is named ScenarioName. The DST determines the structure of InputActions (the .csv file or R list) and begins unlisting the provided InputActions. 2.2 Load Data The DST then loads in the following data inputs: Fishery Input Layer MapRef Layer Whale Density Layer Whale Vertical Distribution Layer Whale Body Dimensions Threat Model If any of these input files do not exist in the expected directory, the model will end and report an error that the specified file was not found. The model also checks for the four required elements within the fishery input layer (). Any missing shapefiles specified in the InputActions (Table 1.1) will also prevent the DST from moving on to model calculation stages. "],["inside-the-dst-model-stages.html", "3 Inside the DST: Model Stages 3.1 Stage 1: Gear Reductions", " 3 Inside the DST: Model Stages 3.1 Stage 1: Gear Reductions "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
